{
    "version": 3,
    "sources": [
        "../../../src/api/controller/goods.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "model",
        "goodsList",
        "select",
        "success",
        "skuAction",
        "goodsId",
        "get",
        "specificationList",
        "getSpecificationList",
        "productList",
        "getProductList",
        "detailAction",
        "info",
        "where",
        "find",
        "gallery",
        "goods_id",
        "limit",
        "attribute",
        "field",
        "join",
        "order",
        "issue",
        "brand",
        "id",
        "brand_id",
        "commentCount",
        "value_id",
        "type_id",
        "count",
        "hotComment",
        "commentInfo",
        "think",
        "isEmpty",
        "commentUser",
        "user_id",
        "content",
        "Buffer",
        "toString",
        "add_time",
        "datetime",
        "Date",
        "nickname",
        "avatar",
        "pic_list",
        "comment_id",
        "comment",
        "data",
        "userHasCollect",
        "isUserHasCollect",
        "userId",
        "addFootprint",
        "categoryAction",
        "currentCategory",
        "parentCategory",
        "parent_id",
        "brotherCategory",
        "listAction",
        "categoryId",
        "brandId",
        "keyword",
        "isNew",
        "isHot",
        "page",
        "size",
        "sort",
        "goodsQuery",
        "whereMap",
        "is_new",
        "is_hot",
        "name",
        "add",
        "parseInt",
        "getTime",
        "orderMap",
        "retail_price",
        "filterCategory",
        "category_id",
        "getCategoryWhereIn",
        "goodsData",
        "countSelect",
        "map",
        "v",
        "checked",
        "filterAction",
        "getChildCategoryId",
        "categoryIds",
        "getField",
        "parentIds",
        "concat",
        "newAction",
        "bannerInfo",
        "url",
        "img_url",
        "hotAction",
        "relatedAction",
        "relatedGoodsIds",
        "relatedGoods",
        "goodsCategory",
        "countAction",
        "goodsCount",
        "is_delete",
        "is_on_sale"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/goods.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n  async indexAction() {\n    const model = this.model('goods');\n    const goodsList = await model.select();\n\n    return this.success(goodsList);\n  }\n\n  /**\n   * 获取sku信息，用于购物车编辑时选择规格\n   * @returns {Promise.<Promise|PreventPromise|void>}\n   */\n  async skuAction() {\n    const goodsId = this.get('id');\n    const model = this.model('goods');\n\n    return this.success({\n      specificationList: await model.getSpecificationList(goodsId),\n      productList: await model.getProductList(goodsId)\n    });\n  }\n\n  /**\n   * 商品详情页数据\n   * @returns {Promise.<Promise|PreventPromise|void>}\n   */\n  async detailAction() {\n    const goodsId = this.get('id');\n    const model = this.model('goods');\n\n    const info = await model.where({ 'id': goodsId }).find();\n    const gallery = await this.model('goods_gallery').where({ goods_id: goodsId }).limit(4).select();\n    const attribute = await this.model('goods_attribute').field('nideshop_goods_attribute.value, nideshop_attribute.name').join('nideshop_attribute ON nideshop_goods_attribute.attribute_id=nideshop_attribute.id').order({ 'nideshop_goods_attribute.id': 'asc' }).where({ 'nideshop_goods_attribute.goods_id': goodsId }).select();\n    const issue = await this.model('goods_issue').select();\n    const brand = await this.model('brand').where({ id: info.brand_id }).find();\n    const commentCount = await this.model('comment').where({ value_id: goodsId, type_id: 0 }).count();\n    const hotComment = await this.model('comment').where({ value_id: goodsId, type_id: 0 }).find();\n    let commentInfo = {};\n    if (!think.isEmpty(hotComment)) {\n      const commentUser = await this.model('user').field(['nickname', 'username', 'avatar']).where({ id: hotComment.user_id }).find();\n      commentInfo = {\n        content: new Buffer(hotComment.content, 'base64').toString(),\n        add_time: think.datetime(new Date(hotComment.add_time * 1000)),\n        nickname: commentUser.nickname,\n        avatar: commentUser.avatar,\n        pic_list: await this.model('comment_picture').where({ comment_id: hotComment.id }).select()\n      };\n    }\n\n    const comment = {\n      count: commentCount,\n      data: commentInfo\n    };\n\n    // 当前用户是否收藏\n    const userHasCollect = await this.model('collect').isUserHasCollect(think.userId, 0, goodsId);\n\n    // 记录用户的足迹 TODO\n    await await this.model('footprint').addFootprint(think.userId, goodsId);\n\n    // return this.json(jsonData);\n    return this.success({\n      info: info,\n      gallery: gallery,\n      attribute: attribute,\n      userHasCollect: userHasCollect,\n      issue: issue,\n      comment: comment,\n      brand: brand,\n      specificationList: await model.getSpecificationList(goodsId),\n      productList: await model.getProductList(goodsId)\n    });\n  }\n\n  /**\n   * 获取分类下的商品\n   * @returns {Promise.<*>}\n   */\n  async categoryAction() {\n    const model = this.model('category');\n    if (this.get('id')!=\"0\") {\n      const currentCategory = await model.where({ id: this.get('id') }).find();\n      const parentCategory = await model.where({ id: currentCategory.parent_id }).find();\n      const brotherCategory = await model.where({ parent_id: currentCategory.parent_id }).select();\n\n      return this.success({\n        currentCategory: currentCategory,\n        parentCategory: parentCategory,\n        brotherCategory: brotherCategory\n      });\n    } else {\n\n      const brotherCategory = await model.select();\n\n      return this.success({\n        currentCategory: [brotherCategory[0]],\n        parentCategory: [],\n        brotherCategory: brotherCategory\n      });\n  }\n}\n\n/**\n * 获取商品列表\n * @returns {Promise.<*>}\n */\nasync listAction() {\n  const categoryId = this.get('categoryId');\n  const brandId = this.get('brandId');\n  const keyword = this.get('keyword');\n  const isNew = this.get('isNew');\n  const isHot = this.get('isHot');\n  const page = this.get('page');\n  const size = this.get('size');\n  const sort = this.get('sort');\n  const order = this.get('order');\n\n  const goodsQuery = this.model('goods');\n\n  const whereMap = {};\n  if (!think.isEmpty(isNew)) {\n    whereMap.is_new = isNew;\n  }\n\n  if (!think.isEmpty(isHot)) {\n    whereMap.is_hot = isHot;\n  }\n\n  if (!think.isEmpty(keyword)) {\n    whereMap.name = ['like', `%${keyword}%`];\n    // 添加到搜索历史\n    await this.model('search_history').add({\n      keyword: keyword,\n      user_id: think.userId,\n      add_time: parseInt(new Date().getTime() / 1000)\n    });\n  }\n\n  if (!think.isEmpty(brandId)) {\n    whereMap.brand_id = brandId;\n  }\n\n  // 排序\n  let orderMap = {};\n  if (sort === 'price') {\n    // 按价格\n    orderMap = {\n      retail_price: order\n    };\n  } else {\n    // 按商品添加时间\n    orderMap = {\n      id: 'desc'\n    };\n  }\n\n  // 筛选的分类\n  let filterCategory = [{\n    'id': 0,\n    'name': '全部',\n    'checked': false\n  }];\n\n  // const categoryIds = await goodsQuery.where(whereMap).getField('category_id', 10000);\n  // if (!think.isEmpty(categoryIds)) {\n  //   // 查找二级分类的parent_id\n  //   const parentIds = await this.model('category').where({ id: { 'in': categoryIds } }).getField('parent_id', 10000);\n  //   // 一级分类\n  //   const parentCategory = await this.model('category').field(['id', 'name']).order({ 'sort_order': 'asc' }).where({ 'id': { 'in': parentIds } }).select();\n\n  //   if (!think.isEmpty(parentCategory)) {\n  //     filterCategory = filterCategory.concat(parentCategory);\n  //   }\n  // }\n\n  // 加入分类条件\n  if (!think.isEmpty(categoryId) && parseInt(categoryId) > 0) {\n    whereMap.category_id = ['in', await this.model('category').getCategoryWhereIn(categoryId)];\n  }\n\n  // 搜索到的商品\n  const goodsData = await goodsQuery.where(whereMap).field(['id', 'name', 'list_pic_url', 'retail_price']).order(orderMap).page(page, size).countSelect();\n  goodsData.filterCategory = filterCategory.map(function (v) {\n    v.checked = (think.isEmpty(categoryId) && v.id === 0) || v.id === parseInt(categoryId);\n    return v;\n  });\n  goodsData.goodsList = goodsData.data;\n\n  return this.success(goodsData);\n}\n\n/**\n * 商品列表筛选的分类列表\n * @returns {Promise.<Promise|void|PreventPromise>}\n */\nasync filterAction() {\n  const categoryId = this.get('categoryId');\n  const keyword = this.get('keyword');\n  const isNew = this.get('isNew');\n  const isHot = this.get('isHot');\n\n  const goodsQuery = this.model('goods');\n\n  if (!think.isEmpty(categoryId)) {\n    goodsQuery.where({ category_id: { 'in': await this.model('category').getChildCategoryId(categoryId) } });\n  }\n\n  if (!think.isEmpty(isNew)) {\n    goodsQuery.where({ is_new: isNew });\n  }\n\n  if (!think.isEmpty(isHot)) {\n    goodsQuery.where({ is_hot: isHot });\n  }\n\n  if (!think.isEmpty(keyword)) {\n    goodsQuery.where({ name: { 'like': `%${keyword}%` } });\n  }\n\n  let filterCategory = [{\n    'id': 0,\n    'name': '全部'\n  }];\n\n  // 二级分类id\n  const categoryIds = await goodsQuery.getField('category_id', 10000);\n  if (!think.isEmpty(categoryIds)) {\n    // 查找二级分类的parent_id\n    const parentIds = await this.model('category').where({ id: { 'in': categoryIds } }).getField('parent_id', 10000);\n    // 一级分类\n    const parentCategory = await this.model('category').field(['id', 'name']).order({ 'sort_order': 'asc' }).where({ 'id': { 'in': parentIds } }).select();\n\n    if (!think.isEmpty(parentCategory)) {\n      filterCategory = filterCategory.concat(parentCategory);\n    }\n  }\n\n  return this.success(filterCategory);\n}\n\n/**\n * 新品首发\n * @returns {Promise.<Promise|void|PreventPromise>}\n */\nasync newAction() {\n  return this.success({\n    bannerInfo: {\n      url: '',\n      name: '坚持初心，为你寻觅世间好物',\n      img_url: 'http://yanxuan.nosdn.127.net/8976116db321744084774643a933c5ce.png'\n    }\n  });\n}\n\n/**\n * 人气推荐\n * @returns {Promise.<Promise|void|PreventPromise>}\n */\nasync hotAction() {\n  return this.success({\n    bannerInfo: {\n      url: '',\n      name: '大家都在买的严选好物',\n      img_url: 'http://yanxuan.nosdn.127.net/8976116db321744084774643a933c5ce.png'\n    }\n  });\n}\n\n/**\n * 商品详情页的大家都在看的商品\n * @returns {Promise.<Promise|PreventPromise|void>}\n */\nasync relatedAction() {\n  // 大家都在看商品,取出关联表的商品，如果没有则随机取同分类下的商品\n  const model = this.model('goods');\n  const goodsId = this.get('id');\n  const relatedGoodsIds = await this.model('related_goods').where({ goods_id: goodsId }).getField('related_goods_id');\n  let relatedGoods = null;\n  if (think.isEmpty(relatedGoodsIds)) {\n    // 查找同分类下的商品\n    const goodsCategory = await model.where({ id: goodsId }).find();\n    relatedGoods = await model.where({ category_id: goodsCategory.category_id }).field(['id', 'name', 'list_pic_url', 'retail_price']).limit(8).select();\n  } else {\n    relatedGoods = await model.where({ id: ['IN', relatedGoodsIds] }).field(['id', 'name', 'list_pic_url', 'retail_price']).select();\n  }\n\n  return this.success({\n    goodsList: relatedGoods\n  });\n}\n\n/**\n * 在售的商品总数\n * @returns {Promise.<Promise|PreventPromise|void>}\n */\nasync countAction() {\n  const goodsCount = await this.model('goods').where({ is_delete: 0, is_on_sale: 1 }).count('id');\n\n  return this.success({\n    goodsCount: goodsCount\n  });\n}\n};\n"
    ]
}